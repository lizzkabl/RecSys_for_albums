import asyncio

from aiogram import Bot, Dispatcher, types
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from database import conn, cursor, UserProfile, _df as df

# ---------- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ë–æ—Ç–∞ ----------
TOKEN = "8049310715:AAFGmVpSIiBsJ4zmLeEK5sC5e6P4Y-mf5bE"
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –•—Ä–∞–Ω–∏–º –ø—Ä–æ—Ñ–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ø–∞–º—è—Ç–∏
user_profiles: dict[int, UserProfile] = {}

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
rating_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text=str(i)) for i in range(1, 6)],
        [KeyboardButton(text="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")]
    ],
    resize_keyboard=True
)
main_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é")],
        [KeyboardButton(text="–°–±—Ä–æ—Å–∏—Ç—å –æ—Ü–µ–Ω–∫–∏")],
        [KeyboardButton(text="–í—ã—Ö–æ–¥")]
    ],
    resize_keyboard=True
)

# –°–æ—Å—Ç–æ—è–Ω–∏—è
class Form(StatesGroup):
    RATE = State()
    MAIN = State()

# ---------- –•–µ–Ω–¥–ª–µ—Ä—ã ----------
@dp.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    uid = message.from_user.id
    uname = message.from_user.username or f"user{uid}"

    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤ –ë–î
    profile = UserProfile(uid, uname)
    user_profiles[uid] = profile

    await message.answer(
        "üéµ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –û—Ü–µ–Ω–∏—Ç–µ –∞–ª—å–±–æ–º—ã, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:",
        reply_markup=rating_kb
    )

    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–µ—Ä–≤—ã–π –∞–ª—å–±–æ–º
    next_album = df.sample(1)['album_name'].values[0]
    await message.answer(f"–û—Ü–µ–Ω–∏—Ç–µ: {next_album}")
    await state.set_state(Form.RATE)
    await state.update_data(current_album=next_album)

@dp.message(Form.RATE)
async def process_rating(message: Message, state: FSMContext):
    uid = message.from_user.id
    data = await state.get_data()
    album = data.get('current_album')
    text = message.text

    if text.isdigit() and 1 <= int(text) <= 5:
        profile = user_profiles.get(uid)
        if profile:
            profile.add_rating(album, int(text))
        await message.answer(
            f"–û—Ü–µ–Ω–∫–∞ {text} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!",
            reply_markup=main_kb
        )
        await state.set_state(Form.MAIN)
    else:
        await message.answer(
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ü–µ–Ω–∫–∏.",
            reply_markup=rating_kb
        )

@dp.message(Form.MAIN)
async def main_menu(message: Message, state: FSMContext):
    uid = message.from_user.id
    text = message.text
    profile = user_profiles.get(uid)

    if text == "–ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é":
        rec = profile.get_recommendation() if profile else None
        if rec:
            await message.answer(
                f"üéß –†–µ–∫–æ–º–µ–Ω–¥—É—é: {rec}\n–û—Ü–µ–Ω–∏—Ç–µ –µ–≥–æ:",
                reply_markup=rating_kb
            )
            await state.set_state(Form.RATE)
            await state.update_data(current_album=rec)
        else:
            await message.answer(
                "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏. –û—Ü–µ–Ω–∏—Ç–µ –±–æ–ª—å—à–µ –∞–ª—å–±–æ–º–æ–≤.",
                reply_markup=rating_kb
            )
            next_album = df.sample(1)['album_name'].values[0]
            await message.answer(f"–û—Ü–µ–Ω–∏—Ç–µ: {next_album}")
            await state.set_state(Form.RATE)
            await state.update_data(current_album=next_album)

    elif text == "–°–±—Ä–æ—Å–∏—Ç—å –æ—Ü–µ–Ω–∫–∏":
        cursor.execute("DELETE FROM ratings WHERE user_id = %s", (uid,))
        conn.commit()
        user_profiles[uid] = UserProfile(uid, message.from_user.username or f"user{uid}")
        await message.answer(
            "üîÑ –û—Ü–µ–Ω–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ:",
            reply_markup=rating_kb
        )
        next_album = df.sample(1)['album_name'].values[0]
        await message.answer(f"–û—Ü–µ–Ω–∏—Ç–µ: {next_album}")
        await state.set_state(Form.RATE)
        await state.update_data(current_album=next_album)

    elif text == "–í—ã—Ö–æ–¥":
        await message.answer(
            "–î–æ –≤—Å—Ç—Ä–µ—á–∏! üëã",
            reply_markup=types.ReplyKeyboardRemove()
        )
        await state.clear()

# ---------- –ó–∞–ø—É—Å–∫ ----------
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
